{"version":3,"sources":["image/heart.svg","image/timeline.svg","image/tick.svg","content/homepage/HomepageState.tsx","content/sample/SampleState.tsx","store.tsx","content/aboutme/AboutmeState.tsx","header/Header.tsx","Route.tsx","content/homepage/Homepage.tsx","content/aboutme/Aboutme.tsx","content/sample/Sample.tsx","footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HomepageState","action","window","open","axios","require","SampleState","this","weatherData","forecast","relativeHumidity","high","low","temperature","wind","direction","speed","periods","regions","central","east","north","south","west","time","end","Date","start","timestamp","updateTimestamp","validPeriod","observable","a","get","response","console","log","data","items","forEach","period","index","splice","general","relative_humidity","update_timestamp","valid_period","error","homepageState","aboutmeState","sampleState","Header","observer","className","exact","activeClassName","to","Component","withRouter","Homepage","scrollToTop","scrollTo","top","behavior","style","fontSize","CardDeck","Card","Img","variant","src","heart","Body","Title","Text","timeline","tick","Button","onClick","props","state","goToGitHubRepository","Aboutme","as","Sample","getWeatherForecast","Footer","App","basename","Fragment","path","render","store","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.984d841d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.c4b75db6.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeline.3a1408c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.e8c5d072.svg\";","import { action } from \"mobx\";\r\n\r\n//=======================================================\r\n// The state of the homepage\r\n//=======================================================\r\nexport default class HomepageState {\r\n  constructor() {}\r\n\r\n  @action\r\n  goToGitHubRepository = () => {\r\n    window.open(\"https://github.com/mori-san/web-app-proj\");\r\n  };\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport { WeatherForecast } from \"../../types\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\n//=======================================================\r\n// The state of the sample page\r\n//=======================================================\r\nexport default class SampleState {\r\n  @observable weatherData: WeatherForecast;\r\n\r\n  constructor() {\r\n    this.weatherData = {\r\n      forecast: \"\",\r\n      relativeHumidity: { high: 0, low: 0 },\r\n      temperature: { high: 0, low: 0 },\r\n      wind: { direction: \"\", speed: { high: 0, low: 0 } },\r\n      periods: [\r\n        {\r\n          regions: { central: \"\", east: \"\", north: \"\", south: \"\", west: \"\" },\r\n          time: { end: new Date(), start: new Date() },\r\n        },\r\n      ],\r\n      timestamp: new Date(),\r\n      updateTimestamp: new Date(),\r\n      validPeriod: { end: new Date(), start: new Date() },\r\n    };\r\n  }\r\n\r\n  //=======================================================\r\n  // API Calls.\r\n  //=======================================================\r\n  @action\r\n  getWeatherForecast = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.data.gov.sg/v1/environment/24-hour-weather-forecast\"\r\n      );\r\n      console.log(response);\r\n      response.data.items.forEach((data: any) => {\r\n        data.periods.forEach((period: any, index: number) => {\r\n          this.weatherData.periods.splice(index, 0, period);\r\n        });\r\n        this.weatherData.forecast = data.general.forecast;\r\n        this.weatherData.relativeHumidity = data.general.relative_humidity;\r\n        this.weatherData.temperature = data.general.temperature;\r\n        this.weatherData.wind.direction = data.general.wind.direction;\r\n        this.weatherData.wind.speed = data.general.wind.speed;\r\n        this.weatherData.timestamp = data.timestamp;\r\n        this.weatherData.updateTimestamp = data.update_timestamp;\r\n        this.weatherData.validPeriod = data.valid_period;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\n","import HomepageState from \"./content/homepage/HomepageState\";\r\nimport AboutmeState from \"./content/aboutme/AboutmeState\";\r\nimport SampleState from \"./content/sample/SampleState\";\r\n\r\n//=======================================================\r\n// States for all the pages.\r\n//=======================================================\r\nconst homepageState = new HomepageState();\r\nconst aboutmeState = new AboutmeState();\r\nconst sampleState = new SampleState();\r\n\r\nexport default {\r\n  homepageState: homepageState,\r\n  aboutmeState: aboutmeState,\r\n  sampleState: sampleState,\r\n};\r\n","//=======================================================\r\n// The state of the about me page\r\n//=======================================================\r\nexport default class AboutmeState {\r\n  constructor() {}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport * as ROUTES from \"../Route\";\r\nimport \"./Header.css\";\r\n\r\n//=======================================================\r\n// The header.\r\n//=======================================================\r\n@observer\r\nclass Header extends Component<RouteComponentProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"Header-box\">\r\n          <div className=\"Header-text-logo\">morisan</div>\r\n\r\n          <div className=\"Header-links-box\">\r\n            <NavLink\r\n              exact\r\n              className=\"Header-link\"\r\n              activeClassName=\"Header-link-selected\"\r\n              to={ROUTES.HOMEPAGE}\r\n            >\r\n              Home\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              className=\"Header-link\"\r\n              activeClassName=\"Header-link-selected\"\r\n              to={ROUTES.ABOUTME}\r\n            >\r\n              About Me\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              className=\"Header-link\"\r\n              activeClassName=\"Header-link-selected\"\r\n              to={ROUTES.SAMPLE}\r\n            >\r\n              Sample\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","//=======================================================\r\n// Route names for all pages.\r\n//=======================================================\r\nexport const LANDING = \"/\";\r\nexport const HOMEPAGE = \"/homepage\";\r\nexport const ABOUTME = \"/aboutme\";\r\nexport const SAMPLE = \"/sample\";\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"./Homepage.css\";\r\nimport HomepageState from \"./HomepageState\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport heart from \"../../image/heart.svg\";\r\nimport timeline from \"../../image/timeline.svg\";\r\nimport tick from \"../../image/tick.svg\";\r\n\r\n//=======================================================\r\n// Props that homepage is receiving.\r\n//=======================================================\r\ntype HomepageProps = {\r\n  state: HomepageState;\r\n};\r\n\r\n//=======================================================\r\n// Homepage view.\r\n//=======================================================\r\n@observer\r\nexport default class Homepage extends Component<HomepageProps> {\r\n  scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <div className=\"Homepage-box\">\r\n          <div className=\"Homepage-title\">\r\n            <p>\r\n              “A self-taught person looks at the big picture with an open mind,\r\n              they explore everything.\r\n            </p>\r\n            <p>\r\n              They investigate themselves uncovering what is no longer taught,\r\n              and experience supports it.”\r\n            </p>\r\n            <p style={{ fontSize: \"12px\" }}>― Efrat Cybulkiewicz</p>\r\n          </div>\r\n\r\n          <CardDeck>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={heart} />\r\n              <Card.Body>\r\n                <Card.Title>\"Give your best everyday!\"</Card.Title>\r\n                <Card.Text>「毎日頑張っています！」</Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={timeline} />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  \"The only time you should look back, is to see how far you've\r\n                  come.\"\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  「人生で過去を振り返るべき唯一の時は、自分がどれだけ成長したかを確かめる時だ。」\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src={tick} />\r\n              <Card.Body>\r\n                <Card.Title>\"I will persist until I succeed.\"</Card.Title>\r\n                <Card.Text>\r\n                  「成功するまでやり続けるからいつかきっと成功する。」\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </CardDeck>\r\n\r\n          <Card className=\"text-center\">\r\n            <Card.Header>GitHub</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>My Repository</Card.Title>\r\n              <Card.Text>https://github.com/mori-san/web-app-proj</Card.Text>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={this.props.state.goToGitHubRepository}\r\n              >\r\n                Go now\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Button\r\n            className=\"backtotop-button\"\r\n            variant=\"outline-secondary\"\r\n            onClick={this.scrollToTop}\r\n          >\r\n            ↑ Back to Top\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"./Aboutme.css\";\r\nimport AboutmeState from \"./AboutmeState\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n//=======================================================\r\n// Props that about me page is receiving.\r\n//=======================================================\r\ntype AboutmeProps = {\r\n  state: AboutmeState;\r\n};\r\n\r\n//=======================================================\r\n// Aboutme view.\r\n//=======================================================\r\n@observer\r\nexport default class Aboutme extends Component<AboutmeProps> {\r\n  scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Aboutme\">\r\n        <div className=\"Aboutme-box\">\r\n          <Card className=\"text-center\">\r\n            <Card.Header as=\"h5\">\r\n              My Journey as a Self-Taught Front End Web Developer\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Introduction</Card.Title>\r\n              <Card.Text>\r\n                I’m a full-time front end developer with 2 years of working\r\n                experience in the tech industry.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Before getting here, I was in the media industry.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                To be honest, it wasn't easy to switch career even though I have\r\n                a computer engineering certificate.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Many firms are seeking for fresh graduate or experienced\r\n                candidate, as a self-learner, I have to work even harder to get\r\n                a chance.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Learning every day is something that grabs a lot of benefits for\r\n                me.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                By giving my best everyday, the day came where I landed my first\r\n                developer job.\r\n              </Card.Text>\r\n              <Card.Text>\r\n                I have learned a lot from work since then, and the sense of\r\n                achievement kept me motivated to strive even harder.\r\n              </Card.Text>\r\n              <Card.Text>In a nutshell, never give up!</Card.Text>\r\n              <Card.Text>Thanks for reading!</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Button\r\n            className=\"backtotop-button\"\r\n            variant=\"outline-secondary\"\r\n            onClick={this.scrollToTop}\r\n          >\r\n            ↑ Back to Top\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"./Sample.css\";\r\nimport SampleState from \"./SampleState\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n//=======================================================\r\n// Props that sample page is receiving.\r\n//=======================================================\r\ntype SampleProps = {\r\n  state: SampleState;\r\n};\r\n\r\n//=======================================================\r\n// Sample page view.\r\n//=======================================================\r\n@observer\r\nexport default class Sample extends Component<SampleProps> {\r\n  componentDidMount() {\r\n    this.props.state.getWeatherForecast();\r\n  }\r\n\r\n  scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Sample\">\r\n        <div className=\"Sample-box\">\r\n          <div className=\"Sample-title\">REST API</div>\r\n\r\n          <Card className=\"text-center\">\r\n            <Card.Header>24-hour Weather Forecast</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Singapore</Card.Title>\r\n              <div className=\"Sample-weather\">\r\n                <div className=\"Sample-weather-left\">\r\n                  <Card.Text>{this.props.state.weatherData.forecast}</Card.Text>\r\n                  <Card.Text>\r\n                    Temperature: {this.props.state.weatherData.temperature.low}{\" \"}\r\n                    - {this.props.state.weatherData.temperature.high}°C\r\n                  </Card.Text>\r\n                </div>\r\n                <div className=\"Sample-weather-right\">\r\n                  <Card.Text>\r\n                    Wind: {this.props.state.weatherData.wind.direction}{\" \"}\r\n                    {this.props.state.weatherData.wind.speed.low} -{\" \"}\r\n                    {this.props.state.weatherData.wind.speed.high} km/h\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Humidity:{\" \"}\r\n                    {this.props.state.weatherData.relativeHumidity.low} -{\" \"}\r\n                    {this.props.state.weatherData.relativeHumidity.high} %\r\n                  </Card.Text>\r\n                </div>\r\n              </div>\r\n              <Card.Text>\r\n                GET\r\n                https://api.data.gov.sg/v1/environment/24-hour-weather-forecast\r\n              </Card.Text>\r\n              <Card.Text>\r\n                Retrieve the latest 24 hour weather forecast\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Button\r\n            className=\"backtotop-button\"\r\n            variant=\"outline-secondary\"\r\n            onClick={this.scrollToTop}\r\n          >\r\n            ↑ Back to Top\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport \"./Footer.css\";\r\n\r\n//=======================================================\r\n// The footer.\r\n//=======================================================\r\n@observer\r\nclass Footer extends Component<RouteComponentProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"Footer\">\r\n        <div className=\"Footer-box\">\r\n          <div className=\"Footer-left\">morisan</div>\r\n          <div className=\"Footer-center\">\r\n            Thanks for visiting! Stay safe! :)\r\n          </div>\r\n          <div className=\"Footer-right\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Footer);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport store from \"./store\";\r\nimport * as ROUTES from \"./Route\";\r\nimport \"./App.css\";\r\nimport Header from \"./header/Header\";\r\nimport Homepage from \"./content/homepage/Homepage\";\r\nimport Aboutme from \"./content/aboutme/Aboutme\";\r\nimport Sample from \"./content/sample/Sample\";\r\nimport Footer from \"./footer/Footer\";\r\n\r\n//=======================================================\r\n// Main app.\r\n//=======================================================\r\n@observer\r\nclass App extends Component<any> {\r\n  render() {\r\n    return (\r\n      <Router basename=\"/web-app-proj\">\r\n        <div className=\"App\">\r\n          <React.Fragment>\r\n            <Header />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path={ROUTES.LANDING}\r\n                render={() => <Redirect to={ROUTES.HOMEPAGE} />}\r\n              />\r\n              <Route\r\n                path={ROUTES.HOMEPAGE}\r\n                render={() => <Homepage state={store.homepageState} />}\r\n              />\r\n              <Route\r\n                path={ROUTES.ABOUTME}\r\n                render={() => <Aboutme state={store.aboutmeState} />}\r\n              />\r\n              <Route\r\n                path={ROUTES.SAMPLE}\r\n                render={() => <Sample state={store.sampleState} />}\r\n              />\r\n              <Route render={() => <Redirect to={ROUTES.HOMEPAGE} />} />\r\n            </Switch>\r\n            <Footer />\r\n          </React.Fragment>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}